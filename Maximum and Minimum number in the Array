//Question:-Maximum and Minimum in an array.
//using Arrays.sort to sort the array , limitation :- Used to sort if array has lesser number of elements. //complexity:- nlogn
import java.util.*;     
public class Main{
    static int maximumElementInTheArray(int[] arr){
        Arrays.sort(arr);
        return arr[arr.length-1];
    }
    static int minimumElementInTheArray(int[] arr){
        Arrays.sort(arr);
        return arr[0];
    }
    
    public static void main(String[] args){
        int[] arr;
        arr = new int[]{1,5,0,-1,-5};
        System.out.println(maximumElementInTheArray(arr));
        System.out.println(minimumElementInTheArray(arr));
    }
}

//Now doing above question using Merge sort then doing this question //complexity:- o(n)
import java.util.*;  
public class Main{
    
    static int[] findMaxAndMinElementInTheArray(int[] arr){
        int max , min;
        int n = arr.length;
        if(n == 1){
            max = arr[0];
            min = arr[0];
        }
        else{
            if(arr[0] > arr[1]){
                max = arr[0];
                min = arr[1];
            }
            else{
                max = arr[1];
                min = arr[0];
            }
            for(int i = 2; i<n; i++){
                if(arr[i] > max){
                    max = arr[i];
                }
                if(arr[i] < min){
                    min = arr[i];
                }
            }
        }
        int[] ans = new int[2];
        ans[0] = max;
        ans[1] = min;
        
        return ans;
    }
    
    public static void main(String[] args){
        int[] arr;
        arr = new int[]{1,5,0,-1,-5};
        int[] result = findMaxAndMinElementInTheArray(arr);
        System.out.println(result[0]);
        System.out.println(result[1]);
    }
}
contributed by:- Aman Johri
